[#ifndef TESTSTATICFIELDTRANSLATOR_H
#define TESTSTATICFIELDTRANSLATOR_H

#include "basictypes/ClassRegistry.h"
#include "basictypes/StringConstant.h"
#include "nlohmann/json.hpp"

#include "java_lang_Object.h"
#include "java_lang_String.h"

class TestStaticFieldTranslator : public java_lang_Object {
public:
    TestStaticFieldTranslator();

    TestStaticFieldTranslator(nlohmann::json jsonObj);
    ~TestStaticFieldTranslator();

    thread_local static java_lang_String *STRING1;

    static Class* getClass();
    static Class* clazz_;
};

#endif
, #include "TestStaticFieldTranslator.h"
#include "basictypes/ClassRegistry.h"
#include "basictypes/ReflectMacros.h"

thread_local java_lang_String *TestStaticFieldTranslator::STRING1 = nullptr;

TestStaticFieldTranslator::TestStaticFieldTranslator()
{

    return;
}

TestStaticFieldTranslator::~TestStaticFieldTranslator() {
}

TestStaticFieldTranslator::TestStaticFieldTranslator(nlohmann::json jsonObj) : java_lang_Object(jsonObj)
 {
}

DEFINE_REFLECT_CLASS_BEGIN(TestStaticFieldTranslator)
    REGISTER_PTR_FIELD(TestStaticFieldTranslator, STRING1, java_lang_String *, "java_lang_String")
DEFINE_REFLECT_CLASS_END(TestStaticFieldTranslator)
]